package practica_2;

import java.awt.Graphics;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import practica_2.Mapa_Entregas;
import practica_2.Historial;

/**
 *
 * @author HP
 */
public class Proceso_Pedido extends javax.swing.JFrame {
    
    public static int distancia;
    public static JLabel carroTipo;
    FondoPanel fondo = new FondoPanel();
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel TablaPedido = new DefaultTableModel();
    String archivo = "datos.txt";
    

    ArrayList<Productos> lista = new ArrayList<Productos>();
    ArrayList<Productos> lista2 = new ArrayList<Productos>();

    public Proceso_Pedido() {
        initComponents();
        
        modelo.addColumn("Cimida/bebida");
        modelo.addColumn("Precio");
        TablaPedido.addColumn("Comida/Bebida");
        TablaPedido.addColumn("Precio");
        cargardatosdefault();
        cargarDatos();
        refrescarTabla();
        
    }

            class FondoPanel extends JPanel{
        private Image imagen;
        
        public void paint(Graphics g){
            imagen = new ImageIcon(getClass().getResource("/Imagenes/images.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            
            super.paint(g);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductosTabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductoPedido = new javax.swing.JTable();
        AgregarPedido = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        OpcionCarros = new javax.swing.JComboBox<>();
        ConfirmarPedidos = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Distancias = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Precio = new javax.swing.JTextField();
        Producto = new javax.swing.JTextField();
        Agregar = new javax.swing.JButton();
        Total = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Eliminar2 = new javax.swing.JButton();
        Serializar = new javax.swing.JButton();
        Deserializar = new javax.swing.JButton();
        EliminarII = new javax.swing.JButton();
        Historiales = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Restaurante CHEESEBURGER");

        ProductosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Pizza", "45"},
                {"Hamburguesa", "30"},
                {"Frappe", "20"},
                {"Gaseosa", null}
            },
            new String [] {
                "COMIDA/BEBIDA", "PRECIO"
            }
        ));
        jScrollPane2.setViewportView(ProductosTabla);

        jLabel2.setText("PRODUCTOS");

        jLabel3.setText("PEDIDO");

        ProductoPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "COMIDA/BEBIDA", "PRECIO"
            }
        ));
        jScrollPane3.setViewportView(ProductoPedido);

        AgregarPedido.setText("Agregar al Carrito");
        AgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPedidoActionPerformed(evt);
            }
        });

        jLabel4.setText("Vehiculo");

        OpcionCarros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carro1", "Carro2", "Carro3" }));
        OpcionCarros.setToolTipText("");
        OpcionCarros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionCarrosActionPerformed(evt);
            }
        });

        ConfirmarPedidos.setText("Confirmar Pedido");
        ConfirmarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarPedidosActionPerformed(evt);
            }
        });

        jLabel5.setText("Distancia a recorrer");

        Distancias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DistanciasActionPerformed(evt);
            }
        });

        jLabel6.setText("Km");

        jLabel7.setText("Producto");

        jLabel8.setText("Precio");

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        Total.setText("Total: ");

        jButton1.setText("Ir a mapa de vehiculos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Eliminar2.setText("Eliminar Todo");
        Eliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar2ActionPerformed(evt);
            }
        });

        Serializar.setText("Serializar");
        Serializar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerializarActionPerformed(evt);
            }
        });

        Deserializar.setText("Deserializar");
        Deserializar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeserializarActionPerformed(evt);
            }
        });

        EliminarII.setText("Eliminar");
        EliminarII.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarIIActionPerformed(evt);
            }
        });

        Historiales.setText("Historial");
        Historiales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistorialesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Serializar)
                                .addGap(18, 18, 18)
                                .addComponent(Deserializar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(OpcionCarros, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Distancias, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Agregar)
                                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(70, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Historiales)
                        .addGap(31, 31, 31))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarII)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgregarPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ConfirmarPedidos, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Eliminar)
                            .addComponent(Eliminar2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Eliminar)
                        .addGap(16, 16, 16)
                        .addComponent(Eliminar2)
                        .addGap(18, 18, 18)
                        .addComponent(AgregarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(ConfirmarPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EliminarII)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(OpcionCarros, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Distancias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(Producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Agregar)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Serializar)
                    .addComponent(Deserializar)
                    .addComponent(Historiales))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpcionCarrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionCarrosActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_OpcionCarrosActionPerformed

    private void ConfirmarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarPedidosActionPerformed
        // TODO add your handling code here:
        if (OpcionCarros.getSelectedItem().toString() == "Carro1") {

            Mapa_Entregas.Distancia1 = Integer.parseInt(Distancias.getText());
            Mapa_Entregas.km1 = Distancias.getText();
        }
        if (OpcionCarros.getSelectedItem().toString() == "Carro2") {
            Mapa_Entregas.Distancia2 = Integer.parseInt(Distancias.getText());
            Mapa_Entregas.km2 = Distancias.getText();

        }
        if (OpcionCarros.getSelectedItem().toString() == "Carro3") {
            Mapa_Entregas.Distancia3 = Integer.parseInt(Distancias.getText());
            Mapa_Entregas.km3 = Distancias.getText();

        }

    }//GEN-LAST:event_ConfirmarPedidosActionPerformed

    private void DistanciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DistanciasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DistanciasActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        // TODO add your handling code here:
        try {
            Productos pro = new Productos();

            pro.setComida_bebida(Producto.getText());
            pro.setPrecio(Double.parseDouble(Precio.getText()));
            lista.add(pro);
            refrescarTabla();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERRROR AL AGREGAR ALUMNO");
        }

    }//GEN-LAST:event_AgregarActionPerformed

    private void AgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPedidoActionPerformed
        // TODO add your handling code here:

        SeleccionTabla();


    }//GEN-LAST:event_AgregarPedidoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Mapa_Entregas cp = new Mapa_Entregas();
        cp.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        while (TablaPedido.getRowCount() > 0) {
            TablaPedido.removeRow(0);
        }

        int fila = ProductoPedido.getSelectedRow();

        if (fila >= 0) {
            TablaPedido.removeRow(fila);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione fila");
        }

        lista2.clear();

    }//GEN-LAST:event_EliminarActionPerformed

    private void Eliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar2ActionPerformed
        // TODO add your handling code here:
        while (TablaPedido.getRowCount() > 0) {
            TablaPedido.removeRow(0);
        }
        int fila = ProductoPedido.getRowCount();
        for (int i = 0; i < fila; i++) {
            TablaPedido.removeRow(i);

        }
        lista2.clear();
        //ProductoPedido.removeAll();

    }//GEN-LAST:event_Eliminar2ActionPerformed

    private void SerializarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerializarActionPerformed
        // TODO add your handling code here:
        serializarDatos();
    }//GEN-LAST:event_SerializarActionPerformed

    private void EliminarIIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarIIActionPerformed
        // TODO add your handling code here:

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);

        }
        int fila2 = ProductosTabla.getSelectedRow();
        if (fila2 >= 0) {
            modelo.removeRow(fila2);
        }
        lista.clear();

    }//GEN-LAST:event_EliminarIIActionPerformed

    private void DeserializarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeserializarActionPerformed
        // TODO add your handling code here:
        deserializarDatos();
    }//GEN-LAST:event_DeserializarActionPerformed

    private void HistorialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistorialesActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Historial cp = new Historial();
        cp.setVisible(true);
    }//GEN-LAST:event_HistorialesActionPerformed

    //---------------------------------------------------------------------
    public void serializarDatos() {
        try {
            FileOutputStream fileOut = new FileOutputStream(archivo);
            ObjectOutputStream out = new ObjectOutputStream(fileOut);
            out.writeObject(lista);
            out.close();
            fileOut.close();
            JOptionPane.showMessageDialog(this, "serializacion correcta");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void cargarDatos() {
        try {
            FileInputStream fileIn = new FileInputStream(archivo);
            ObjectInputStream in = new ObjectInputStream(fileIn);
            lista = (ArrayList<Productos>) in.readObject();
            in.close();
            fileIn.close();
            System.out.println("Datos cargados correctamente.");
        } catch (Exception e) {
            lista = new ArrayList<>();
            e.printStackTrace();
        }
    }

    private void deserializarDatos() {
        try {
            FileInputStream desguardado = new FileInputStream(archivo);
            ObjectInputStream in = new ObjectInputStream(desguardado);
            lista = (ArrayList<Productos>) in.readObject();
            in.close();
            desguardado.close();

            JOptionPane.showMessageDialog(this, "deserializacion correcta");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    //-------------------------------------------------------------------

    public void SeleccionTabla() {
        int seleccion = ProductosTabla.getSelectedRow();

        Productos seleccionado = lista.get(seleccion);

        if (lista.contains(seleccionado)) {
            lista2.add(new Productos(seleccionado.getComida_bebida(), seleccionado.getPrecio()));

        }
        cargarProducto();
    }

    public void cargardatosdefault() {
      
        for (int i = 0; i < lista.size(); i++) {
            Object[] fila = new Object[2];
            fila[0] = lista.get(i).getComida_bebida();
            fila[1] = lista.get(i).getPrecio();
            modelo.addRow(fila);
        }
        ProductosTabla.setModel(modelo);

    }
    public void cargarProducto() {
        // TablaPedido.addColumn("Comida/Bebida");
        //TablaPedido.addColumn("Precio");
        while (TablaPedido.getRowCount() > 0) {
            TablaPedido.removeRow(0);
        }
        for (int i = 0; i < lista2.size(); i++) {
            Object[] fila = new Object[2];
            fila[0] = lista2.get(i).getComida_bebida();
            fila[1] = lista2.get(i).getPrecio();
            TablaPedido.addRow(fila);
        }

        ProductoPedido.setModel(TablaPedido);
        Suma();

    }

    public void Suma() {
        double suma = 0.00;
        for (int i = 0; i < ProductoPedido.getRowCount(); i++) {
            double precio = Double.parseDouble(ProductoPedido.getValueAt(i, 1).toString());
            suma += precio;
        }

        Total.setText("Total: " + suma);
    }

    public void refrescarTabla() {

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

        for (Productos productos : lista) {
            Object a[] = new Object[2];
            a[0] = productos.getComida_bebida();
            a[1] = productos.getPrecio();

            modelo.addRow(a);
        }
        ProductosTabla.setModel(modelo);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proceso_Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proceso_Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proceso_Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proceso_Pedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proceso_Pedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton AgregarPedido;
    private javax.swing.JButton ConfirmarPedidos;
    private javax.swing.JButton Deserializar;
    public javax.swing.JTextField Distancias;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Eliminar2;
    private javax.swing.JButton EliminarII;
    private javax.swing.JButton Historiales;
    public javax.swing.JComboBox<String> OpcionCarros;
    private javax.swing.JTextField Precio;
    private javax.swing.JTextField Producto;
    public javax.swing.JTable ProductoPedido;
    private javax.swing.JTable ProductosTabla;
    private javax.swing.JButton Serializar;
    private javax.swing.JLabel Total;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables


}
